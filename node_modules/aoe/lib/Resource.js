'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Created by exolution on 17/6/14.
 */
var Resource = function () {
    _createClass(Resource, null, [{
        key: 'load',
        value: function load(src, name) {
            var m = /\.([^.]+)$/.exec(src);
            var ext = m && m[1];
            var type = void 0;
            Resource.types.some(function (t) {
                if (t.regexp.test(ext)) {
                    type = t.type;
                    return true;
                }
            });
            if (type) {
                Resource.resourceMap[name || src] = new Resource.classMap[type](src, name);
            } else {
                throw new Error('unsupported resource format "' + ext + '"');
            }
            return Resource.resourceMap[name || src];
        }
    }, {
        key: 'get',
        value: function get(name) {
            return Resource.resourceMap[name];
        }
    }, {
        key: 'init',
        value: function init(onProgress) {
            var resources = [];
            var complete = 0;
            var keys = Object.keys(Resource.resourceMap);
            var all = keys.length;
            function progress() {
                onProgress(++complete, all);
            }
            return Promise.all(keys.map(function (key) {
                return Resource.resourceMap[key].init(progress);
            }));
        }
    }]);

    function Resource(src, name) {
        _classCallCheck(this, Resource);

        return Resource.load(src, name);
    }

    return Resource;
}();

exports.default = Resource;

var ImageResource = function () {
    function ImageResource(src, name) {
        _classCallCheck(this, ImageResource);

        this.src = src;
        this.name = name;
    }

    _createClass(ImageResource, [{
        key: 'init',
        value: function init(onProgress) {
            var _this = this;

            this.image = new Image();
            this.image.src = this.src;
            return new Promise(function (resolve, reject) {
                _this.image.onload = function () {
                    resolve();
                    if (onProgress) {
                        onProgress();
                    }
                };
                _this.image.onerror = function () {
                    reject(this);
                };
            });
        }
    }]);

    return ImageResource;
}();

Resource.types = [{ regexp: /png|gif|jpe?g/, type: 'image' }];
Resource.resourceMap = {};
Resource.classMap = {
    image: ImageResource
};